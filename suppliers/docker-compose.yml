version: '3'
services:
  supplier-service:
    build: ./
    environment:
      OTEL_SERVICE_NAME: "supplier-service"
      OTEL_TRACES_EXPORTER: "jaeger,zipkin"
      OTEL_EXPORTER_JAEGER_ENDPOINT: "http://jaeger:14250"
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      OTEL_METRICS_EXPORTER: "prometheus"
      OTEL_EXPORTER_PROMETHEUS_HOST: "0.0.0.0"
      OTEL_EXPORTER_PROMETHEUS_PORT: "9464"
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "http://collector:4317"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/suppliers"
      SPRING_DATASOURCE_USERNAME: "username"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    depends_on:
      - postgres
      - jaeger-all-in-one
      - zipkin-all-in-one
      - collector
    ports:
      - "8080:8080"

#pour les traces 1
  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "14250:14250"
#pour les traces
  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  # pour les metrics
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./podman/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      -  --config.file=/etc/prometheus/prometheus.yml
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - supplier-service
 # pour les metrics
  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./podman/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  # le collecteur prenant de opt-agent
  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./podman/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "4317" # otel receiver
    depends_on:
      - loki
  # exporter  pour envoyer
  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"


  postgres:
    container_name: postgres-supplier
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: suppliers
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
